---
import BaseLayout from "@layouts/BaseLayout.astro";
import Landing from "@components/Landing.astro";
import landingImageMeta from "@assets/images/landing.jpg"; // Import will provide metadata
import { getImage } from "astro:assets"; // Keep for cases where you might need to force format

console.log('image-test.astro: Imported image metadata:', landingImageMeta);

// landingImageMeta is ALREADY an image metadata object here.
// We only need getImage if we want to transform it (e.g., change format) or if we imported a string path.

let imageToRender = landingImageMeta;
let errorOccurred = null;

// Example: If you wanted to force AVIF from the original JPG path:
// try {
//   console.log('image-test.astro: Forcing AVIF from:', landingImageMeta.src);
//   imageToRender = await getImage({
//     src: landingImageMeta.src, // Pass the original source string from the metadata
//     format: 'avif',
//     width: landingImageMeta.width,
//     height: landingImageMeta.height
//   });
//   console.log('image-test.astro: AVIF forced image data:', imageToRender);
// } catch (e) {
//   console.error('image-test.astro: Error forcing AVIF:', e);
//   errorOccurred = e.message;
//   imageToRender = null; // Ensure we don't try to render if conversion failed
// }

const pageTitle = errorOccurred ? "Image Test Error" : "Image Test Page";
---
<BaseLayout title={pageTitle} description="Test page for image handling">
  {errorOccurred ? (
    <div style="padding: 2rem; color: red;">
      <h1>Error during image processing</h1>
      <pre>{errorOccurred}</pre>
    </div>
  ) : imageToRender ? (
    <Landing title="Image Test" image={imageToRender} imageAlt="Test image" />
  ) : (
    <div style="padding: 2rem; color: orange;">
      <h1>Image to render is undefined.</h1>
    </div>
  )}
  <div style="padding: 2rem;">
    <h2>Debug Info:</h2>
    <p>Imported Image Metadata (raw import type): {typeof landingImageMeta}</p>
    <p>Image to Render (type): {typeof imageToRender}</p>
    <p>Error: {errorOccurred ? errorOccurred : 'No error'}</p>
    <p>Rendered Image (check console for full object):</p>
    <pre>{JSON.stringify(imageToRender, null, 2)}</pre>
  </div>
</BaseLayout> 